buildscript {
    repositories.gradlePluginPortal()
    dependencies.classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.0"
}

apply plugin: 'java-library'

group 'me.xdrop'
version '2.0.0'

apply from: 'gradle/vars.gradle'

def exportedProjects = [
        ':fuzzywuzzy',
        ':levenshtein'
]

wrapper {
    gradleVersion = '5.2'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

allprojects {
    tasks.withType(Javadoc) {
        options {
            encoding = 'UTF-8'
            links = [
                    "https://docs.oracle.com/javase/8/docs/api/",
                    "https://docs.oracle.com/javaee/7/api/"
            ]
        }
    }
}

subprojects {
    apply plugin: 'java-library'

    group 'me.xdrop'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        classifier = "sources"
    }

    task javadocJar(type: Jar) {
        //javadoc
        from javadoc.destinationDir
        classifier = "javadoc"
    }

    compileJava.options.encoding = 'UTF-8'
    
    repositories.jcenter()

    dependencies {
        testImplementation 'org.easymock:easymock:3.6'
        testImplementation 'org.codehaus.groovy:groovy-test:2.5.3'
    }
}

project(':fuzzywuzzy') {
    version '2.0.0'

    dependencies {
        // do not update this! this is the last standalone Trie version
        api 'org.comroid:common-util-trie:1.0.0'
    }
}

project(':levenshtein') {
    version '2.0.0'

    dependencies {
        api project(':fuzzywuzzy')
    }
}

task allJavadoc(type: Javadoc) {
    source exportedProjects.collect { project(it).sourceSets.main.allJava }
    classpath = files(exportedProjects.collect { project(it).sourceSets.main.compileClasspath })
    options.encoding = 'UTF-8'
    options.destinationDirectory(file("./docs/"))
}

apply from: 'gradle/publishing.gradle'
